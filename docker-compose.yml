services:
  postgres:
    image: postgres:15-alpine
    container_name: trailverse-postgres
    environment:
      POSTGRES_DB: trailverse
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d trailverse"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: trailverse-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: trailverse-server
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:postgres@trailverse-postgres:5432/trailverse
      DIRECT_URL: postgresql://postgres:postgres@trailverse-postgres:5432/trailverse
      NODE_ENV: development
      PORT: 5000
      JWT_SECRET: trailverse-jwt-secret-change-in-production-min-32-chars-123456789
      JWT_REFRESH_SECRET: trailverse-refresh-secret-different-from-jwt-min-32-chars-987654321
      JWT_EXPIRES_IN: 15m
      JWT_REFRESH_EXPIRES_IN: 7d
      BCRYPT_ROUNDS: 12
      REDIS_HOST: trailverse-redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      CLIENT_URL: http://localhost:3000
      NPS_API_KEY: demo-key
      OPENAI_API_KEY: demo-key
      WEATHER_API_KEY: demo-key
    volumes:
      - ./server:/app
      - /app/node_modules
      - /app/dist
    working_dir: /app
    command: >
      sh -c "
        echo '🚀 Starting Trailverse Server...' &&
        echo '📦 Installing dependencies...' &&
        npm install &&
        echo '🔧 Generating Prisma client...' &&
        npx prisma generate &&
        echo '🗄️  Syncing database schema...' &&
        npx prisma db push --accept-data-loss &&
        echo '🎯 Starting Prisma Studio...' &&
        npx prisma studio --hostname 0.0.0.0 --port 5555 &
        echo '🔥 Starting development server...' &&
        npm run dev
      "
    ports:
      - "5001:5000"
      - "5555:5555"
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
